#include "cpu.h"
#include "bus.h"
#include "emu.h"


/*
	Instructions Structure
*/

typedef enum{
	ADRM_INVALID,
	ADRM_ABSOLUTE,
	ADRM_ABSOLUTE_INDEXED_X,
	ADRM_ABSOLUTE_INDEXED_Y,
	ADRM_ABSOLUTE_INDEXED_INDIRECT,
	ADRM_ABSOLUTE_INDIRECT,
	ADRM_ABSOLUTE_INDIRECT_LONG,
	ADRM_ABSOLUTE_LONG,
	ADRM_ABSOLUTE_LONG_INDEXED_X,
	ADRM_ACCUMULATOR,
	ADRM_BLOCK_MOVE,
	ADRM_DIRECT_PAGE,
	ADRM_DIRECT_PAGE_INDEXED_X,
	ADRM_DIRECT_PAGE_INDEXED_Y,
	ADRM_DIRECT_PAGE_INDEXED_INDIRECT_X,
	ADRM_DIRECT_PAGE_INDIRECT,
	ADRM_DIRECT_PAGE_INDIRECT_LONG,
	ADRM_DIRECT_PAGE_INDIRECT_INDEXED_Y,
	ADRM_DIRECT_PAGE_INDIRECT_LONG_INDEXED_Y,
	ADRM_IMMEDIATE,
	ADRM_IMPLIED,
	ADRM_PROGRAM_COUNTER_RELATIVE,
	ADRM_PROGRAM_COUNTER_RELATIVE_LONG,
	ADRM_STACK_ABSOLUTE,
	ADRM_STACK_DIRECT_PAGE,
	ADRM_STACK_INTERRUPT,
	ADRM_STACK_PROGRAM_COUNTER_RELATIVE,
	ADRM_STACK_PULL,
	ADRM_STACK_PUSH,
	ADRM_STACK_RTI,
	ADRM_STACK_RTL,
	ADRM_STACK_RTS,
	ADRM_STACK_RELATIVE,
	ADRM_STACK_RELATIVE_INDIRECT_INDEXED_Y,
}AdrMode;

typedef enum{
	DESC_NONE
}Descriptor;

typedef struct{
	void (*procedure)();
	AdrMode adrm;
	Descriptor desc;
	int32 data;
}Instr;


/*
	Instructions Procedures
*/

void procNull(){

}

void procNop(){}


/*
	Instructions Glossary
*/

Instr instructions[256] = {
	[0xEA] = {procNull, ADRM_IMPLIED, DESC_NONE, 0},
};
